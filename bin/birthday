#!/usr/bin/env node
const  Pool  = require('pg').Pool;
const moment = require('moment');
const { WebClient } = require('@slack/web-api');
const conversationId = 'CLSRUJMJQ';

const date = moment().format('M/DD');
const token = process.env.SLACK_ACCESS_TOKEN;
const web = new WebClient(token);


const pool = new Pool({
	user: 'llangford',
	host: 'localhost',
	database: 'testdb',
	password: '',
	port: 5432,
});


async function getUsers(emails){
	let emailList = emails.map(x => Object.values(x).pop());

	const users = [];

	for (const email of emailList) {
		let trim = email.trim();
		try {
			const res = await web.users.lookupByEmail({token: token, email: trim});
			const id = (Object.values(Object.values(res)[1])[0]);
			users.push('<@' + id + '>');
		}
		catch(err) {
			console.log(err);
		}
	}
	return users;

}

async function getBirthdayUsers() {
	let rows = await pool.query(`select email from employee where birthday_date = '${date}'`);
	let emails = Object.values(rows)[3];
	return getUsers(emails);
}

async function postHappyBirthday() {
	let users = await getBirthdayUsers();
	if (users.length) {
		const res = await web.chat.postMessage({
			channel: conversationId,
			text: 'Happy Birthday to the following employees' + users.toString(),
			attachments: [{"title": "Happy Birthday!!!!","image_url": "https://i.imgur.com/qs8zp4j.gif"}]
		});
	}
}

async function getAnniversaryUsers(){
	let rows = await pool.query(`select email from employee where to_char(anniversary_date,'FMMM/FMDD') = '${date}' `);
	const emails = Object.values(Object.values(rows)[3]);
	return getUsers(emails);
}

async function postAnniversary() {
	let users = await getAnniversaryUsers();
	if (users.length) {
		const res = await web.chat.postMessage({
			channel: conversationId,
			text: 'Happy Anniversary to the following employees:' + users.toString(),
			attachments: [{"title": "Happy Anniversary!!!!","image_url": "https://i.imgur.com/qs8zp4j.gif"}]
		});
	}
}

(async() => {
	await postHappyBirthday();
	await postAnniversary();
})();